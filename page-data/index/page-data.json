{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"allMdx":{"nodes":[{"frontmatter":{"company":null,"title":"About Me","type":"about","index":null,"hidden":null,"splash":null,"time":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"About Me\",\n  \"author\": \"David Peet\",\n  \"type\": \"about\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"\\uD83D\\uDC4B Hi, I'm David!\"), mdx(\"p\", null, \"I'm a 4th year Computer Science student at the University of Waterloo. Last term, I was working at Huawei on lightweight cryptography.\\nI'm interested in systems development including OS and compiler development as well as backend web development, and I'm always interested in learning!\"), mdx(\"p\", null, \"I'm looking for Fall 2022 (Sept-Dec) internship opportunities! Feel free to reach out through \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"mailto:dapeet@uwaterloo.ca\"\n  }, \"email - (dapeet@uwaterloo.ca)\"), \" or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.linkedin.com/in/dapeet/\"\n  }, \"LinkedIn\"), \" to chat!\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":null,"title":"Binary IO","type":"project","index":9,"hidden":false,"splash":"Directly read and write binary files using a traditional text editor","time":"Summer 2022"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Binary IO\",\n  \"time\": \"Summer 2022\",\n  \"index\": 9,\n  \"type\": \"project\",\n  \"hidden\": false,\n  \"splash\": \"Directly read and write binary files using a traditional text editor\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GitLink = makeShortcode(\"GitLink\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://github.com/DavidPeet8/BinaryIO\"\n  }, \"Binary IO\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" 2020\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C++\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CMake\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Github Source:\"), \" \", mdx(GitLink, {\n    url: \"https://github.com/DavidPeet8/BinaryIO\",\n    mdxType: \"GitLink\"\n  })), mdx(\"hr\", null), mdx(\"p\", null, \"Although impractical for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"binary patching\"), \", Binary IO is a useful tool for understanding binary formats and investigating small non human readable files. I created Binary IO in my spare time while working at Huawei to assist me in understanding the compiler object file format used.\"), mdx(\"p\", null, \"What I wanted to create with this project was a tool to give me true insight into file content. I wanted to remove endian conversions and other magic that mainstream tools apply automatically for usability improvements, and instead provide a tool that \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"tells it like it is\\\"\"), \". I found this particularly useful for understanding & generating binary file formats.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":null,"title":"Note Modules","type":"project","index":8,"hidden":false,"splash":"Create & organize technical documents without duplicating information (and giving everyone a headache)","time":"stuff"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Note Modules\",\n  \"time\": \"stuff\",\n  \"index\": 8,\n  \"type\": \"project\",\n  \"hidden\": false,\n  \"splash\": \"Create & organize technical documents without duplicating information (and giving everyone a headache)\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GitLink = makeShortcode(\"GitLink\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://notes.davidpeet.me\"\n  }, \"Note Modules\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" 2020\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C++\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Angular\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Python\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Github Source:\"), \" \", mdx(GitLink, {\n    url: \"https://github.com/DavidPeet8/Note-Modules\",\n    mdxType: \"GitLink\"\n  })), mdx(\"hr\", null), mdx(\"p\", null, \"Human experiences lend themselves to storage in a graph style data-structure. Unfortunately such a graph is difficult to construct and even more difficult to maintain as references between nodes must be updated so frequently.\"), mdx(\"p\", null, \"I wrote note modules (... \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node_modules\"), \" ... haha see what I did there?) to obtain some of the benefits of a graph storage of knowledge. This includes improved modularization of notes as well as prevention of data duplication. In all, Note Modules provides:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A preprocessing stage to remove questionable semantic choices in the markdown specification\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Latex Math rendering\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Note composition - view the content of one note inline inside of another\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Versioning / source control\")));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":null,"title":"Deadline","type":"project","index":7,"hidden":false,"splash":"Minimalistic method of organizing reminders with seamless workflow integration","time":"stuff"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Deadline\",\n  \"time\": \"stuff\",\n  \"index\": 7,\n  \"type\": \"project\",\n  \"hidden\": false,\n  \"splash\": \"Minimalistic method of organizing reminders with seamless workflow integration\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GitLink = makeShortcode(\"GitLink\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://github.com/DavidPeet8/deadline\"\n  }, \"Deadline\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" 2020\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Angular\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Firestore\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Github Source:\"), \" \", mdx(GitLink, {\n    url: \"https://github.com/DavidPeet8/deadline\",\n    mdxType: \"GitLink\"\n  })), mdx(\"hr\", null), mdx(\"p\", null, \"Deadline is a simple application for organizing goals in your life. Deadline is secured by OAuth to keep your tasks your own.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":null,"title":"Memory Sanitizer","type":"project","index":6,"hidden":false,"splash":"Software shim monitoring process memory consumption & checking for leaks","time":"stuff"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Memory Sanitizer\",\n  \"time\": \"stuff\",\n  \"index\": 6,\n  \"type\": \"project\",\n  \"hidden\": false,\n  \"splash\": \"Software shim monitoring process memory consumption & checking for leaks\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GitLink = makeShortcode(\"GitLink\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://github.com/DavidPeet8/Memory-Sanitizer\"\n  }, \"Memory Sanitizer\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" 2020\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C/C++\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Linux\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Make\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Github Source:\"), \" \", mdx(GitLink, {\n    url: \"https://github.com/DavidPeet8/Memory-Sanitizer\",\n    mdxType: \"GitLink\"\n  })), mdx(\"hr\", null), mdx(\"p\", null, \"Memory Leaks are a common error in low level programs which can lead to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"thrashing\"), \" and sometimes security vulnerabilities. Common tooling for detecting and handling memory leaks includes \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Valgrind\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ASAN\"), \". Although both tools are quite useful at detecting leaks, ASAN has a mandatory compile time component rendering it useless on production executables, and Valgrind is just plain slow because it goes to the additional work of emulating x86 instructions by virtualizing the CPU.\"), mdx(\"p\", null, \"Memory Sanitizer is designed to fill the void left by other tools by providing the ability to  smoke test a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"production executable\")), \" for memory leaks. In this situation, no debug symbols exist, and optimizations are enabled, so it is highly unlikely that any memory sanitization program can provide much useful information.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Thus, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Memory Santizer\"), \" only needs to answer one question: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"given a program, does it leak memory\")), \"?\")), mdx(\"p\", null, \"With this goal in mind, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Memory Sanitizer\"), \" shims memory allocation & deallocation calls  tracking memory consumption over the program lifetime. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Memory Sanitizer\"), \" attaches to production executables by taking advantage of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LD_PRELOAD\"), \" and dynamic linking order, essentially forcing executables to link with my memory allocation & deallocation implementations rather than those provided by the standard library. As a result of the minimal overhead in Memory sanitizer, it provides:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Over 100x startup time improvement over Valgrind\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Over 100x less runtime overhead than Valgrind\")));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":null,"title":"Branch Visualizer","type":"project","index":5,"hidden":false,"splash":"Source control visualizer - your best friend for generating correct diffs for code review","time":"stuff"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Branch Visualizer\",\n  \"time\": \"stuff\",\n  \"index\": 5,\n  \"type\": \"project\",\n  \"hidden\": false,\n  \"splash\": \"Source control visualizer - your best friend for generating correct diffs for code review\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GitLink = makeShortcode(\"GitLink\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://github.com/DavidPeet8/Branch-Visualizer\"\n  }, \"Branch Visualizer\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" 2019\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Java\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Git\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Github Source:\"), \" \", mdx(GitLink, {\n    url: \"https://github.com/DavidPeet8/Branch-Visualizer\",\n    mdxType: \"GitLink\"\n  })), mdx(\"hr\", null), mdx(\"p\", null, \"I created \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Branch Visualizer\"), \" as a proof of concept to track the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"parent-child-orphan\"), \" relationship between multiple git branches. This tool was intended to assist developers by keeping track of parent branches for generating diffs & code reviews.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":"Hudson River Trading","title":"Core Engineering Intern","type":"position","index":5,"hidden":false,"splash":"Incoming Core Engineering Intern","time":"Summer 2022"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"company\": \"Hudson River Trading\",\n  \"title\": \"Core Engineering Intern\",\n  \"time\": \"Summer 2022\",\n  \"index\": 5,\n  \"type\": \"position\",\n  \"hidden\": false,\n  \"splash\": \"Incoming Core Engineering Intern\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://www.hudsonrivertrading.com/\"\n  }, \"Hudson River Trading\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" May - Aug 2022\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C++\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Location:\"), \" New York City\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Team:\"), \" Core Engineering\"), mdx(\"hr\", null), mdx(\"p\", null, \"I will be joining HRT as a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Software Engineering Intern\"), \" under the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Core Engineering\"), \" umbrella this Summer (2022). Check back for an update then!\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":null,"title":"Website","type":"project","index":4,"hidden":false,"splash":"A landing page to showcase my projects & experience","time":"stuff"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Website\",\n  \"time\": \"stuff\",\n  \"index\": 4,\n  \"type\": \"project\",\n  \"hidden\": false,\n  \"splash\": \"A landing page to showcase my projects & experience\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GitLink = makeShortcode(\"GitLink\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://website.davidpeet.me\"\n  }, \"This Website\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" 2019 (Updated 2021)\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Gatsby\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Github Source:\"), \" \", mdx(GitLink, {\n    url: \"https://github.com/DavidPeet8/website\",\n    mdxType: \"GitLink\"\n  })), mdx(\"hr\", null), mdx(\"p\", null, \"Seems self explanatory... You're looking at it! \\uD83D\\uDE04\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":"Uber","title":"Software Engineering Intern","type":"position","index":4,"hidden":false,"splash":"Incoming SWE intern","time":"Winter 2022"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"company\": \"Uber\",\n  \"title\": \"Software Engineering Intern\",\n  \"time\": \"Winter 2022\",\n  \"index\": 4,\n  \"type\": \"position\",\n  \"hidden\": false,\n  \"splash\": \"Incoming SWE intern\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://www.uber.com/\"\n  }, \"Uber\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" Jan - Apr 2022\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" To be determined!\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Location:\"), \" Remote in Canada\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Team:\"), \" To be determined!\"), mdx(\"hr\", null), mdx(\"p\", null, \"I'll be joining Uber this Winter (2022) as a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Software Engineering Intern\"), \". Check back for an update then!\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":null,"title":"Site Spotlight","type":"project","index":3,"hidden":false,"splash":"Boosting productivity by highlighting search results you're interested in","time":"stuff"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Site Spotlight\",\n  \"time\": \"stuff\",\n  \"index\": 3,\n  \"type\": \"project\",\n  \"hidden\": false,\n  \"splash\": \"Boosting productivity by highlighting search results you're interested in\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GitLink = makeShortcode(\"GitLink\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://github.com/DavidPeet8/Site-Spotlight\"\n  }, \"Site Spotlight\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" 2019\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JQuery\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JavaScript\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Github Source:\"), \" \", mdx(GitLink, {\n    url: \"https://github.com/DavidPeet8/Site-Spotlight\",\n    mdxType: \"GitLink\"\n  })), mdx(\"hr\", null), mdx(\"p\", null, \"Before the internet existed, researching was made difficult by the lack of access to information. Now we suffer from the opposite problem - there is too much information and we need to filter out the junk.\"), mdx(\"p\", null, \"Site spotlight was created to help do exactly this. Site spotlight highlights search results from favorite websites in different colors for easy visual identification.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":"Huawei","title":"Linux Kernel / Application Developer Intern","type":"position","index":3,"hidden":false,"splash":"Developing modern lightweight cryptographic algorithms improving data security in next-gen IoT devices","time":"Summer 2021"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"company\": \"Huawei\",\n  \"title\": \"Linux Kernel / Application Developer Intern\",\n  \"time\": \"Summer 2021\",\n  \"index\": 3,\n  \"type\": \"position\",\n  \"hidden\": false,\n  \"splash\": \"Developing modern lightweight cryptographic algorithms improving data security in next-gen IoT devices\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://www.huawei.com/\"\n  }, \"Huawei Technologies\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" May - Aug 2021\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C/C++\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pthreads\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Bash\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Location:\"), \" Ontario, Canada\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Team:\"), \" Lightweight Cryptography\"), mdx(\"hr\", null), mdx(\"p\", null, \"In my second term at Huawei I worked in our \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Data Security & Privacy Lab\"), \" on the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Lightweight Cryptography (LWC)\"), \" team. My team's goal was to produce a lightweight cryptography library for usage across the company and by partners.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Lightweight cryptography is an area of active research concerned with developing a collection of algorithms and methodologies specifically targeted at constrained execution environments. Different LWC algorithms optimize for different constraints but typically the constraints considered include:\"), mdx(\"ol\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Cost\"), \" - Custom hardware for hardware acceleration is not feasible\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Power Consumption\"), \" - Algorithms must consume as little energy as possible so that they can continue to function on IoT devices like credit cards\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Security\"), \" - Algorithms must provide acceptable security against modern attacks\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Overhead\"), \" - For example reduce authentication code tag length to reduce network overhead\"))), mdx(\"p\", null, \"Over the course of the term I implemented 5 different algorithms in our library including:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SKINNY\"), \" - Lightweight tweakable block cipher\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SKINNY-Hash\"), \" - A cryptographic hash function based on the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SKINNY\"), \" Block cipher\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Romulus\"), \" - An AEAD (Authenticated Encryption with Additional Data) scheme based on \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SKINNY\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"LightMAC\"), \" - A lightweight algorithm for message authentication configurable to use any block cipher. LightMAC reduces authentication tag length by performing \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"tag truncation\"), \" sacrificing exponential security loss for linear tag size reduction.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ProMAC\"), \" - A bleeding edge lightweight MAC algorithm for authenticating packet streams. ProMAC uses a rolling internal state to maintain high \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"eventual security\"), \" for packets by calculating authentication codes using material from previous packets. This approach allows individual tags to remain short without sacrificing security. At time of writing no open source implementations of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ProMAC\"), \" exist.\")), mdx(\"p\", null, \"Over the course of the term I also assisted in the development of a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"Memory Integrity Protection\")), \" scheme essentially aiming to encrypt and authenticate all accesses to RAM preventing attackers with physical device access from compromising the device.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":null,"title":"Beautiful New Tab","type":"project","index":2,"hidden":false,"splash":"Stylish New Tab page putting you one keystroke away from your favourite sites","time":"stuff"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Beautiful New Tab\",\n  \"time\": \"stuff\",\n  \"index\": 2,\n  \"type\": \"project\",\n  \"hidden\": false,\n  \"splash\": \"Stylish New Tab page putting you one keystroke away from your favourite sites\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GitLink = makeShortcode(\"GitLink\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://github.com/DavidPeet8/Beautiful-NewTab\"\n  }, \"New Tab\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" 2018\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JavaScript\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FireBase\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Github Source:\"), \" \", mdx(GitLink, {\n    url: \"https://github.com/DavidPeet8/Beautiful-NewTab\",\n    mdxType: \"GitLink\"\n  })), mdx(\"hr\", null), mdx(\"p\", null, \"A simple chrome new tab page customization with a few added features:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hotkeys to launch favorite websites\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A space to record ideas throughout the day\")));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":"Huawei","title":"Compiler Software Engineering Intern","type":"position","index":2,"hidden":false,"splash":"Building out a heterogeneous optimizing compiler for GPU shaders and GPU compute workloads","time":"Fall 2020"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"company\": \"Huawei\",\n  \"title\": \"Compiler Software Engineering Intern\",\n  \"time\": \"Fall 2020\",\n  \"index\": 2,\n  \"type\": \"position\",\n  \"hidden\": false,\n  \"splash\": \"Building out a heterogeneous optimizing compiler for GPU shaders and GPU compute workloads\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://www.huawei.com/\"\n  }, \"Huawei Technologies\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" Sept - Dec 2020\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C++\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LLVM\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OpenCL\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Bash\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Location:\"), \" Ontario, Canada\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Team:\"), \" Mobile GPU Compilers\"), mdx(\"hr\", null), mdx(\"p\", null, \"At Huawei I was on the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Mobile GPU Compiler team\"), \" where I worked on our LLVM based GPU compiler. My team was targeting performance boosts for General Purpose GPU workloads such as compute kernels written in OpenCL. Over the course of the term I worked on the compiler backend which generates object files / assembly code from the optimized intermediate representation produced by the LLVM optimizer.\"), mdx(\"p\", null, \"I worked specifically on modifications to the object file format produced, resulting in a 66% power reduction on program load, and vastly improved binary tooling.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":null,"title":"Terraria","type":"project","index":1,"hidden":false,"splash":"Terraria turned MS Windows meme","time":"stuff"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Terraria\",\n  \"time\": \"stuff\",\n  \"index\": 1,\n  \"type\": \"project\",\n  \"hidden\": false,\n  \"splash\": \"Terraria turned MS Windows meme\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar GitLink = makeShortcode(\"GitLink\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://github.com/DavidPeet8/Terraria\"\n  }, \"Terraria\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" 2017\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LibGDX\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Java\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Box2D\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Github Source:\"), \" \", mdx(GitLink, {\n    url: \"https://github.com/DavidPeet8/Terraria\",\n    mdxType: \"GitLink\"\n  })), mdx(\"hr\", null), mdx(\"p\", null, \"This Terraria emulation was a summative project I developed in highschool which inadvertently became a passive aggressive attack on Windows.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cool Features:\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Random terrain distribution via a pseudorandom noise algorithm derived from \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Perlin Noise\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Random resource distribution via the same noise function\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Supports basic game mechanics including movement & physics, mining & tools, and inventory & storage\")));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":"McAfee","title":"Software Developer Intern","type":"position","index":1,"hidden":false,"splash":"Reducing install time of McAfee security solutions including Windows System Security and McAfee Gamer Security","time":"Winter 2020"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"company\": \"McAfee\",\n  \"title\": \"Software Developer Intern\",\n  \"time\": \"Winter 2020\",\n  \"index\": 1,\n  \"type\": \"position\",\n  \"hidden\": false,\n  \"splash\": \"Reducing install time of McAfee security solutions including Windows System Security and McAfee Gamer Security\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://www.mcafee.com/\"\n  }, \"McAfee\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" Jan - Apr 2020\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C++\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Angular\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Bash\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Location:\"), \" Ontario, Canada\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Team:\"), \" Installer Team\"), mdx(\"hr\", null), mdx(\"p\", null, \"At McAfee I worked on the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Installer team\"), \". My team was concerned with all product installers but particularly with the main \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Windows System Security\"), \" installer.\"), mdx(\"p\", null, \"Over the term I worked to improve the performance and reliability of our core product installer. I removed unnecessary forced device reboots throughout the install process. I also profiled the install process via binary instrumentation to isolate install time bottlenecks.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":null,"title":"Test","type":"project","index":0,"hidden":true,"splash":null,"time":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"hidden\": true,\n  \"type\": \"project\",\n  \"title\": \"Test\",\n  \"author\": \"David Peet\",\n  \"index\": 0\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Markdown test\"), mdx(\"h2\", null, \"H2\"), mdx(\"h3\", null, \"H3\"), mdx(\"h4\", null, \"H4\"), mdx(\"h5\", null, \"H5\"), mdx(\"h6\", null, \"H6\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Bold text\"), \"\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"emphasis\"), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"code snippet\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"template<typename T>\\nint codeBlock(T &e) {\\n    return (int)e;\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":"Axonify","title":"Software Developer Intern","type":"position","index":0,"hidden":false,"splash":"Designing & implementing new features for employee onboarding in the employee training system of tomorrow","time":"Summer 2019"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"company\": \"Axonify\",\n  \"title\": \"Software Developer Intern\",\n  \"time\": \"Summer 2019\",\n  \"index\": 0,\n  \"type\": \"position\",\n  \"hidden\": false,\n  \"splash\": \"Designing & implementing new features for employee onboarding in the employee training system of tomorrow\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://axonify.com/\"\n  }, \"Axonify\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" May - Aug 2019\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JavaScript\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Java\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BackboneJS\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Hibernate\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Bash\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Location:\"), \" Ontario, Canada\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Team:\"), \" Guided Learning\"), mdx(\"hr\", null), mdx(\"p\", null, \"Axonify's product is an employee training service targeting frontline employees for organizations. Essentially the app provides an initial onboarding experience for new employees to get them up to speed called \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Guided Learning\"), \", as well as an ongoing ML based training regimen for employees to keep fresh on their training knowledge. In addition to the benefit to frontline employees, the service also provides a variety of metrics on training completion to upper management.\"), mdx(\"p\", null, \"At Axonify I worked on the Guided Learning team developing a new feature for our app's onboarding flow. I worked on developing \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Milestones\"), \" - a feature intended to act like checkpoints giving trainees something to strive for while progressing through their onboarding tasks.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},{"frontmatter":{"company":null,"title":"Line Following Robot","type":"project","index":0,"hidden":false,"splash":"Line following robot with digital and analogue following modes","time":"stuff"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Line Following Robot\",\n  \"time\": \"stuff\",\n  \"index\": 0,\n  \"type\": \"project\",\n  \"hidden\": false,\n  \"splash\": \"Line following robot with digital and analogue following modes\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Line Following Robot\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Date Range:\"), \" 2014\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Key Technologies:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"C\")), mdx(\"hr\", null), mdx(\"p\", null, \"This robot was the summative project of a computer hardware course I took in highschool. This robot makes use of PWM (Pulse Width Modulation) to control motor speeds, and transfers the input from each of two IR sensors under the robot to the motor on the opposite side to accomplish line following behavior.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}]}},"pageContext":{}},
    "staticQueryHashes": []}