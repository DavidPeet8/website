{"version":3,"file":"component---src-pages-projects-binaryio-mdx-7170d38b466df3c5ecf4.js","mappings":"qMAgBsBA,E,+CATTC,EAAe,CAC1B,MAAS,YACT,KAAQ,cACR,MAAS,EACT,KAAQ,UACR,QAAU,EACV,OAAU,wEAQNC,GALgBF,EAKQ,UALA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,KAIZG,EAAc,CAClBL,aAAAA,GAGa,SAASM,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGL,GACF,YACD,OAAO,SALS,UAKT,iBAAeG,EAAiBH,EAAhC,CAAuCK,WAAYA,EAAYC,QAAQ,eAC5E,oBAAI,cAAGC,WAAW,KACd,KAAQ,0CADR,eAGJ,mBAAG,mBAAQA,WAAW,KAAnB,eAAH,UACA,mBAAG,mBAAQA,WAAW,KAAnB,qBAAH,KAA6D,uBAAYA,WAAW,KAAvB,OAA7D,KAAiH,uBAAYA,WAAW,KAAvB,WACjH,mBAAG,mBAAQA,WAAW,KAAnB,kBAAH,KAA0D,SAACR,EAAD,CAASS,IAAI,yCAAyCF,QAAQ,cACxH,qBACA,+CAAgC,eAAIC,WAAW,KAAf,mBAAhC,qPACA,kRAAmQ,eAAIA,WAAW,KAAf,yBAAnQ,2FAKJH,EAAWK,gBAAiB,G,qBC5Cb,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,E","sources":["webpack://gatsbywebsite/./src/pages/projects/binaryio.mdx","webpack://gatsbywebsite/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Binary IO\",\n  \"time\": \"Summer 2022\",\n  \"index\": 9,\n  \"type\": \"project\",\n  \"hidden\": false,\n  \"splash\": \"Directly read and write binary files using a traditional text editor\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst GitLink = makeShortcode(\"GitLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1><a parentName=\"h1\" {...{\n        \"href\": \"https://github.com/DavidPeet8/BinaryIO\"\n      }}>{`Binary IO`}</a></h1>\n    <p><strong parentName=\"p\">{`Date Range:`}</strong>{` 2020`}</p>\n    <p><strong parentName=\"p\">{`Key Technologies:`}</strong>{` `}<inlineCode parentName=\"p\">{`C++`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`CMake`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Github Source:`}</strong>{` `}<GitLink url=\"https://github.com/DavidPeet8/BinaryIO\" mdxType=\"GitLink\" /></p>\n    <hr></hr>\n    <p>{`Although impractical for `}<em parentName=\"p\">{`binary patching`}</em>{`, Binary IO is a useful tool for understanding binary formats and investigating small non human readable files. I created Binary IO in my spare time while working at Huawei to assist me in understanding the compiler object file format used.`}</p>\n    <p>{`What I wanted to create with this project was a tool to give me true insight into file content. I wanted to remove endian conversions and other magic that mainstream tools apply automatically for usability improvements, and instead provide a tool that `}<em parentName=\"p\">{`\"tells it like it is\"`}</em>{`. I found this particularly useful for understanding & generating binary file formats.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["name","_frontmatter","GitLink","props","console","warn","layoutProps","MDXContent","components","mdxType","parentName","url","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}